{"version":3,"sources":["components/TableItem.js","components/TableData.js","components/User.js","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["TableItem","user","onDeleteItem","onUserSelected","selected","console","log","isSelected","includes","id","TableRow","hover","TableCell","Checkbox","checked","onChange","e","target","to","Button","color","size","variant","username","email","website","onClick","useStyles","makeStyles","TableRoot","display","justifyContent","width","flexDirection","TableData","users","sortById","page","setPage","sortBy","styles","orderBy","usersList","slice","className","TableContainer","component","Paper","Table","sx","minWidth","TableHead","sortDirection","TableSortLabel","active","direction","TableBody","map","i","Pagination","count","Math","round","length","User","padding","alignItems","Avatar","height","userInfo","UserPage","withRouter","props","classes","match","params","useState","loading","state","setState","useEffect","getUser","a","axios","get","response","data","LinearProgress","bgcolor","name","address","city","phone","App","error","sort","getUsers","message","filter","el","b","parseInt","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","app","basename","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.16177168.chunk.js","sourcesContent":["import { Button, Checkbox, TableCell, TableRow } from \"@mui/material\"\nimport { Link } from \"react-router-dom\"\n\n\n\nexport const TableItem = ({user,onDeleteItem,onUserSelected,selected}) => {\n    const onDelete = () => {\n        onDeleteItem(user.id)\n    }\n    const handleClick = (e) => {\n        onUserSelected(e.target.checked,user.id);\n    }\n    console.log(selected);\n    const isSelected = selected.includes(user.id);\n    return (\n        <TableRow hover selected = {isSelected}>\n            <TableCell><Checkbox checked = {isSelected} onChange = {handleClick}/></TableCell>\n            <TableCell >{user.id}</TableCell>\n            <TableCell>\n                \n                <Link to = {`/user/${user.id}`}>\n                    <Button \n                        color={'secondary'} \n                        size ={'small'} \n                        variant = {'contained'}>\n                        More details\n                    </Button>\n                </Link> \n            </TableCell>\n            <TableCell>{user.username}</TableCell>\n            <TableCell>{user.email}</TableCell>\n            <TableCell>{user.website}</TableCell>\n            <TableCell> \n                <Button \n                    size = {'small'}\n                    onClick = {onDelete}\n                    variant = {'contained'} \n                    color ={'error'}\n                >Delete</Button> \n            </TableCell>\n        </TableRow>\n    )\n}","import { Checkbox, Pagination, Paper,Table, TableBody, TableCell, \n        TableContainer, TableHead, TableRow, TableSortLabel } \nfrom \"@mui/material\"\nimport { TableItem } from \"./TableItem\"\n\nimport { makeStyles } from \"@mui/styles\"\n\nconst useStyles = makeStyles({\n    TableRoot : {\n        display : 'flex',\n        justifyContent : 'center',\n        width:'80%',\n        flexDirection:'column'\n    }\n})\n\nexport const TableData = ({users,onDeleteItem,sortById,page,setPage,\n                            onUserSelected,selected,sortBy}) => {\n    const styles = useStyles();\n    const orderBy = (sortBy === 'asc'?true:false);\n    const onPaginated = (e,page) => {\n        setPage(page-1)\n    }\n    const usersList = users.slice(page*5,page*5+5);\n    return (\n        <div className = {styles.TableRoot}>\n            <TableContainer  component = {Paper}>\n                <Table  sx ={{minWidth : 700}}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell> </TableCell>\n                            <TableCell sortDirection={orderBy} onClick = {sortById}> \n                                <TableSortLabel active ={true} direction = {sortBy}> \n                                    <h3>ID</h3>\n                                </TableSortLabel> \n                            </TableCell>\n                            <TableCell></TableCell>\n                            <TableCell ><h3>Username</h3></TableCell>\n                            <TableCell><h3>Email</h3></TableCell>\n                            <TableCell><h3>WebSite</h3></TableCell>\n                            <TableCell></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            usersList.map((user,i) => {\n                                return <TableItem \n                                        key = {`${user.id}&${i}`}\n                                        onUserSelected = {onUserSelected}\n                                        onDeleteItem = {onDeleteItem}\n                                        selected = {selected}\n                                        user = {user}/>\n                            })\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <Pagination \n                onChange = {onPaginated}\n                count={Math.round(users.length/5)}\n                />\n        </div>\n    )\n}","import { Avatar, LinearProgress, Paper } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\"\nimport { Link, withRouter } from \"react-router-dom\"\n\nconst useStyles = makeStyles({\n    User : {\n        width : '500px',\n        padding : '20px',\n        display:'flex',\n        justifyContent : 'space-between',\n        alignItems : 'center'\n    },\n    Avatar : {\n        width : '50px',\n        height : '50px',\n        color : 'orange'\n    },\n    userInfo : {\n\n    }\n})\n\nconst User = (props) =>{\n    const classes = useStyles();\n    const{id} = props.match.params;\n    const[state,setState] = useState({\n        user : {},\n        loading : true\n    })\n    useEffect(() => {\n        const getUser = async() => {\n            try{\n                const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n                console.log(response);\n                setState({\n                    ...state,\n                    user : response.data,\n                    loading : false\n                })\n            }catch(e){\n                console.log(e);\n            }\n        }\n        getUser()\n    },[]);\n    \n    if(state.loading){\n        return <LinearProgress /> \n    }\n    const {user} = state;\n    return (\n        <div>\n        <Link to = '/'>Main </Link><br/>\n        <Paper className = {classes.User}>\n            <Avatar sx={{ bgcolor: 'orange',width :'100px',height : '100px' }}> \n                {user.username[0]}\n            </Avatar>\n            <div className = {classes.userInfo}>\n                <h4>Name  {user.name} </h4>\n                <h4>Email  {user.email} </h4>\n                <h4>City : {user.address.city}</h4>\n                <h4>Phone : {user.phone}</h4>\n\n            </div>\n        </Paper>\n        </div>\n    )\n}\n\nconst UserPage = withRouter(User)\nexport {UserPage}","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { TableData } from \"./components/TableData\";\nimport classes from './App.module.css';\nimport { Route } from \"react-router-dom\";\nimport { UserPage } from \"./components/User\";\nimport { LinearProgress } from \"@mui/material\";\n\nfunction App() {\n  const[state,setState] = useState({\n    users : [],\n    selected : [],\n    loading : true,\n    error : null,\n    page : 0,\n    sort : 'asc'\n  })\n  useEffect(() => {\n    const getUsers = async() => {\n      try{\n        const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n        console.log(response.data);\n        setState({\n          ...state,\n          users : response.data,\n          loading : false\n        })\n      }catch(e){\n        setState({\n          ...state,\n          error : e.message\n        })\n      }\n    }\n    getUsers();\n    // eslint-disable-next-line\n  },[]);\n\n  const setPage = (page) => {\n    setState({\n      ...state,\n      page\n    })\n  }\n\n  const onDeleteItem = (id) => {\n    setState({\n      ...state,\n      users : state.users.filter(el => el.id !== id)\n    });\n  }\n\n  const sortById = () => {\n    if(state.sort === 'asc'){\n      setState({\n        ...state,\n        users : state.users.sort((a,b) => parseInt(b.id) - parseInt(a.id)),\n        sort : 'desc'\n      })\n    }else{\n      setState({\n        ...state,\n        users : state.users.sort((a,b) => parseInt(a.id) - parseInt(b.id)),\n        sort : 'asc'\n      })\n    }\n    \n  }\n\n  const onUserSelected = (checked,id) =>{\n    if(checked){\n      setState({\n        ...state,\n        selected : [...state.selected,id]\n      })\n    }else{\n      \n      if(state.selected.length > 1){\n        \n        setState({\n          ...state,\n          selected : state.selected.filter(el => el !== id)\n        })\n      }\n    }\n  }\n\n  if(state.loading){\n    return <LinearProgress />\n  }\n \n  return (\n    <div className = {classes.App}>\n      \n        <Route exact path = \"/\" render = {\n          () => <TableData \n                  sortById = {sortById}\n                  setPage = {setPage}\n                  page = {state.page}\n                  sortBy = {state.sort}\n                  selected = {state.selected}\n                  onUserSelected = {onUserSelected}\n                  onDeleteItem = {onDeleteItem} \n                  users = {state.users}/>}/>\n        \n       \n        <Route path = \"/user/:id\" render = {\n          () => <UserPage />\n        }/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst app = (\n  <HashRouter basename = {'/'}>\n    <App/>\n  </HashRouter>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};"],"sourceRoot":""}